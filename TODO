
- kipróbálni és átnevezni a példafájlokat
- átnézni nagyjából a kódot (fő szerkezet), néhány szóval dokumentálni


-------------------------------

másol átszámozás rule-graph: (Hole n -> Ref n-új, statikus ref-ekhez új számok kiosztása)


-----------------------------------------
architektúra



forrás -> AST  ->  data dekl.  -> binds
           |                        \--->
           \--> függvények és konst. ---> renamed  --> gráfátírás


-----------------------------------------

További teendők:

I) Minden .hs modulra működjön

- data: 

data List a = Nil | Cons a (List a)


 Id generálás
    Nil   ->    1
    Cons  ->    2
  --> bekerül a binds-ba a rename függvénynek

{-
 aritás:
    Nil   -> 0
    Cons  -> 2
-}
Ezek megjelennek a mintákban és a kifejezésekben.


II) Transzformációk:


Gráfátíró rendszer:

- nincs case (mintaillesztés van helyette)
- nincsenek lokális függvények, de vannak lokális konstansok (lifteléssel lehet elérni)
- nincsenek őrfeltételek

     f x y | x == y = 0
     f x y | x < y = -1
     f x y = x


     f1 x y = f2 x y (x == y)

     f2 x y True = 0
     f2 x y _    = f3 x y (x < y)

     f3 x y True = -1
     f3 x y _    = x



 - minták
 - konstruktoroknak megfelelő id-k a mintákban

definiálható: ++, /=, not

    a /= b = not (a == b)

beépített (delta) függvények:
predefined:
    "div"
    "mod"
    "succ"
    "eqInt"

Típusosztályok:
    ==   ->   eqString, eqInt

    a /= b = not (a == b)
        ->
    neq eq a b = not (eq a b)

    ... (a /= b) ...  ->  ... (neq eqInt a b) ...




